import{_ as i,c as a,o as h,ag as n}from"./chunks/framework.DPDPlp3K.js";const o=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"document/useless/vue/vue.md","filePath":"document/useless/vue/vue.md","lastUpdated":1743353941000}'),t={name:"document/useless/vue/vue.md"};function e(l,s,p,k,r,d){return h(),a("div",null,s[0]||(s[0]=[n(`<h2 id="相关工具" tabindex="-1">相关工具 <a class="header-anchor" href="#相关工具" aria-label="Permalink to &quot;相关工具&quot;">​</a></h2><p><a href="https://v2.template-explorer.vuejs.org/" target="_blank" rel="noreferrer">v2的模版编译工具网站</a><a href="https://play.vuejs.org/" target="_blank" rel="noreferrer">v3的模版编译工具网站</a></p><h2 id="v2-v3中对v-for和v-if的优先级处理" tabindex="-1">v2/v3中对v-for和v-if的优先级处理 <a class="header-anchor" href="#v2-v3中对v-for和v-if的优先级处理" aria-label="Permalink to &quot;v2/v3中对v-for和v-if的优先级处理&quot;">​</a></h2><p>v2中v-for优先级高于v-if，v3中v-if的优先级高于v-for</p><h2 id="hash路由和history路由" tabindex="-1">hash路由和history路由 <a class="header-anchor" href="#hash路由和history路由" aria-label="Permalink to &quot;hash路由和history路由&quot;">​</a></h2><h3 id="hash模式" tabindex="-1">hash模式 <a class="header-anchor" href="#hash模式" aria-label="Permalink to &quot;hash模式&quot;">​</a></h3><p>当 URL 的 hash 部分发生变化时，浏览器会触发 hashchange 事件，路由库会监听这个事件并根据新的 hash 值来渲染相应的组件。</p><h3 id="history模式" tabindex="-1">history模式 <a class="header-anchor" href="#history模式" aria-label="Permalink to &quot;history模式&quot;">​</a></h3><p>使用 History API 中的 pushState 和 replaceState 方法来改变 URL，同时监听 popstate(前进后退) 事件以便在 URL 发生变化时进行相应的路由切换</p><h2 id="nexttick-原理" tabindex="-1">nexttick 原理 <a class="header-anchor" href="#nexttick-原理" aria-label="Permalink to &quot;nexttick 原理&quot;">​</a></h2><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mounted</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">     this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.name </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;front end&#39;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">     this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.verse </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;世间万物都是空，功名利禄似如风&#39;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">     Promise</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">resolve</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">then</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">       this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.name </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;study ...&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    })</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">     setTimeout</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">       this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.verse </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;半身风雨半身寒，一杯浊酒敬流年&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    })</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">},</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">updated</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.count</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">++</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;update:&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.count)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 1,2,3</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div>`,11)]))}const g=i(t,[["render",e]]);export{o as __pageData,g as default};
